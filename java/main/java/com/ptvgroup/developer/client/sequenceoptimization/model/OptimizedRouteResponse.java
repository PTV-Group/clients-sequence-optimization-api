/*
 * Sequence Optimization
 * With the Sequence Optimization service you can find the best route for your transports.
 *
 * The version of the OpenAPI document: 1.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ptvgroup.developer.client.sequenceoptimization.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.ptvgroup.developer.client.sequenceoptimization.model.ErrorResponse;
import com.ptvgroup.developer.client.sequenceoptimization.model.OperationStatus;
import com.ptvgroup.developer.client.sequenceoptimization.model.OptimizedRoute;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Contains the results of an optimization. If the &#39;status&#39; is &#39;RUNNING&#39;, the calculation is still running and no further properties are set. If the &#39;status&#39; is &#39;SUCCEEDED&#39;, the optimization result is present as property &#39;optimizedRoute&#39;. If the &#39;status&#39; is &#39;FAILED&#39;, the failure result is present as property &#39;error&#39;.
 */
@ApiModel(description = "Contains the results of an optimization. If the 'status' is 'RUNNING', the calculation is still running and no further properties are set. If the 'status' is 'SUCCEEDED', the optimization result is present as property 'optimizedRoute'. If the 'status' is 'FAILED', the failure result is present as property 'error'.")
@JsonPropertyOrder({
  OptimizedRouteResponse.JSON_PROPERTY_STATUS,
  OptimizedRouteResponse.JSON_PROPERTY_OPTIMIZED_ROUTE,
  OptimizedRouteResponse.JSON_PROPERTY_ERROR
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-01-31T14:00:36.487937Z[Etc/UTC]")
public class OptimizedRouteResponse {
  public static final String JSON_PROPERTY_STATUS = "status";
  private OperationStatus status;

  public static final String JSON_PROPERTY_OPTIMIZED_ROUTE = "optimizedRoute";
  private OptimizedRoute optimizedRoute;

  public static final String JSON_PROPERTY_ERROR = "error";
  private JsonNullable<ErrorResponse> error = JsonNullable.<ErrorResponse>undefined();

  public OptimizedRouteResponse() { 
  }

  public OptimizedRouteResponse status(OperationStatus status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OperationStatus getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatus(OperationStatus status) {
    this.status = status;
  }


  public OptimizedRouteResponse optimizedRoute(OptimizedRoute optimizedRoute) {
    this.optimizedRoute = optimizedRoute;
    return this;
  }

   /**
   * Get optimizedRoute
   * @return optimizedRoute
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_OPTIMIZED_ROUTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OptimizedRoute getOptimizedRoute() {
    return optimizedRoute;
  }


  @JsonProperty(JSON_PROPERTY_OPTIMIZED_ROUTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOptimizedRoute(OptimizedRoute optimizedRoute) {
    this.optimizedRoute = optimizedRoute;
  }


  public OptimizedRouteResponse error(ErrorResponse error) {
    this.error = JsonNullable.<ErrorResponse>of(error);
    return this;
  }

   /**
   * A human readable message that describes the error. Set and used only when operation status is FAILED.
   * @return error
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A human readable message that describes the error. Set and used only when operation status is FAILED.")
  @JsonIgnore

  public ErrorResponse getError() {
        return error.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ERROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<ErrorResponse> getError_JsonNullable() {
    return error;
  }
  
  @JsonProperty(JSON_PROPERTY_ERROR)
  public void setError_JsonNullable(JsonNullable<ErrorResponse> error) {
    this.error = error;
  }

  public void setError(ErrorResponse error) {
    this.error = JsonNullable.<ErrorResponse>of(error);
  }


  /**
   * Return true if this OptimizedRouteResponse object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OptimizedRouteResponse optimizedRouteResponse = (OptimizedRouteResponse) o;
    return Objects.equals(this.status, optimizedRouteResponse.status) &&
        Objects.equals(this.optimizedRoute, optimizedRouteResponse.optimizedRoute) &&
        equalsNullable(this.error, optimizedRouteResponse.error);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(status, optimizedRoute, hashCodeNullable(error));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OptimizedRouteResponse {\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    optimizedRoute: ").append(toIndentedString(optimizedRoute)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

