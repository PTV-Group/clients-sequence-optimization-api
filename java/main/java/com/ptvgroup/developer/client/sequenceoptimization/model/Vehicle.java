/*
 * Sequence Optimization
 * With the Sequence Optimization service you can find the best route for your transports.
 *
 * The version of the OpenAPI document: 1.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ptvgroup.developer.client.sequenceoptimization.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * The vehicle used to transport goods.
 */
@ApiModel(description = "The vehicle used to transport goods.")
@JsonPropertyOrder({
  Vehicle.JSON_PROPERTY_CAPACITIES,
  Vehicle.JSON_PROPERTY_PROFILE,
  Vehicle.JSON_PROPERTY_START_LOCATION_ID,
  Vehicle.JSON_PROPERTY_END_LOCATION_ID
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-02-02T08:22:26.165041Z[Etc/UTC]")
public class Vehicle {
  public static final String JSON_PROPERTY_CAPACITIES = "capacities";
  private List<Integer> capacities = null;

  public static final String JSON_PROPERTY_PROFILE = "profile";
  private String profile = "EUR_VAN";

  public static final String JSON_PROPERTY_START_LOCATION_ID = "startLocationId";
  private String startLocationId;

  public static final String JSON_PROPERTY_END_LOCATION_ID = "endLocationId";
  private String endLocationId;

  public Vehicle() { 
  }

  public Vehicle capacities(List<Integer> capacities) {
    this.capacities = capacities;
    return this;
  }

  public Vehicle addCapacitiesItem(Integer capacitiesItem) {
    if (this.capacities == null) {
      this.capacities = new ArrayList<>();
    }
    this.capacities.add(capacitiesItem);
    return this;
  }

   /**
   * The list of capacities for the different quantity dimensions of goods that can be transported. The maximum length of this list is 100. That is, up to 100 different quantity dimensions (e.g. number of pallets, weight, volume, etc.) can be distinguished. Transports can only be executed by a vehicle with a higher (or an equal) maximum capacity in every quantity dimension. The length of this list has to be the same for all transports and the vehicle. If and only if this list of capacities is empty for the given vehicle, the quantities of each transport must be empty.
   * @return capacities
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The list of capacities for the different quantity dimensions of goods that can be transported. The maximum length of this list is 100. That is, up to 100 different quantity dimensions (e.g. number of pallets, weight, volume, etc.) can be distinguished. Transports can only be executed by a vehicle with a higher (or an equal) maximum capacity in every quantity dimension. The length of this list has to be the same for all transports and the vehicle. If and only if this list of capacities is empty for the given vehicle, the quantities of each transport must be empty.")
  @JsonProperty(JSON_PROPERTY_CAPACITIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Integer> getCapacities() {
    return capacities;
  }


  @JsonProperty(JSON_PROPERTY_CAPACITIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCapacities(List<Integer> capacities) {
    this.capacities = capacities;
  }


  public Vehicle profile(String profile) {
    this.profile = profile;
    return this;
  }

   /**
   * The profile defines attributes of the vehicle relevant to determine travel times and distances between any two locations.   Default profile is _EUR_VAN_. See [here](./concepts/profiles-and-countries) for a complete list of allowed values.
   * @return profile
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The profile defines attributes of the vehicle relevant to determine travel times and distances between any two locations.   Default profile is _EUR_VAN_. See [here](./concepts/profiles-and-countries) for a complete list of allowed values.")
  @JsonProperty(JSON_PROPERTY_PROFILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProfile() {
    return profile;
  }


  @JsonProperty(JSON_PROPERTY_PROFILE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProfile(String profile) {
    this.profile = profile;
  }


  public Vehicle startLocationId(String startLocationId) {
    this.startLocationId = startLocationId;
    return this;
  }

   /**
   * ID of the vehicle&#39;s start location. If vehicle&#39;s start location does not coincide with the location of the first pickup, only the coordinates of vehicle&#39;s start location are considered and all other attributes such as opening intervals, service time or type are ignored. If no start location is specified, it is assumed that the vehicle is available at the first stop.
   * @return startLocationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ID of the vehicle's start location. If vehicle's start location does not coincide with the location of the first pickup, only the coordinates of vehicle's start location are considered and all other attributes such as opening intervals, service time or type are ignored. If no start location is specified, it is assumed that the vehicle is available at the first stop.")
  @JsonProperty(JSON_PROPERTY_START_LOCATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStartLocationId() {
    return startLocationId;
  }


  @JsonProperty(JSON_PROPERTY_START_LOCATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStartLocationId(String startLocationId) {
    this.startLocationId = startLocationId;
  }


  public Vehicle endLocationId(String endLocationId) {
    this.endLocationId = endLocationId;
    return this;
  }

   /**
   * ID of the vehicle&#39;s end location. If vehicle&#39;s end location does not coincide with the location of the last delivery, only the coordinates of vehicle&#39;s end location are considered and all other attributes such as opening intervals, service time or type are ignored. If no end location is specified, it is assumed that the vehicle remains at the last stop.
   * @return endLocationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ID of the vehicle's end location. If vehicle's end location does not coincide with the location of the last delivery, only the coordinates of vehicle's end location are considered and all other attributes such as opening intervals, service time or type are ignored. If no end location is specified, it is assumed that the vehicle remains at the last stop.")
  @JsonProperty(JSON_PROPERTY_END_LOCATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEndLocationId() {
    return endLocationId;
  }


  @JsonProperty(JSON_PROPERTY_END_LOCATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEndLocationId(String endLocationId) {
    this.endLocationId = endLocationId;
  }


  /**
   * Return true if this Vehicle object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Vehicle vehicle = (Vehicle) o;
    return Objects.equals(this.capacities, vehicle.capacities) &&
        Objects.equals(this.profile, vehicle.profile) &&
        Objects.equals(this.startLocationId, vehicle.startLocationId) &&
        Objects.equals(this.endLocationId, vehicle.endLocationId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(capacities, profile, startLocationId, endLocationId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Vehicle {\n");
    sb.append("    capacities: ").append(toIndentedString(capacities)).append("\n");
    sb.append("    profile: ").append(toIndentedString(profile)).append("\n");
    sb.append("    startLocationId: ").append(toIndentedString(startLocationId)).append("\n");
    sb.append("    endLocationId: ").append(toIndentedString(endLocationId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

